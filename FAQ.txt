Q. List all authors for a project?
A. git log --format="%an" | sort -u

Q. Delete the last commit?
A. Dont do this if you pushed changes
   git reset --hard HEAD~1
   [use --soft to keep the files in stage]
or
   git reset --hard <sha1-commit-id>

Q. How do I clone all remote branches with Git?
A. Quick look
   git checkout origin/experimental
To work on branch
   git checkout -b experimental origin/experimental

Q. How do I make git clone checkout LF instead of CRLF on a windows box
A. Edit config on windows box and set core.autocrlf=input in either --system or --global config

Q. How to add colour
A. git config --global color.diff auto
git config --global color.status auto
git config --global color.branch auto

Q. How to stop git tracking a file but keep the file
A. git rm --cached <filename>

Q. How to make existing branch track a remote branch
A. git branch --set-upstream foo remote/foo

Q. How to split a repo

You want to clone your repository and then use git filter-branch to mark everything but the subdirectory you want in your new repo to be garbage-collected. To clone your local repository:

 $ git clone --no-hardlinks /XYZ /ABC

 The --no-hardlinks switch makes git use real file copies instead of hardlinking when cloning a local repository. The garbage collection and pruning actions will only work on blobs (file contents), not links.

 Then just filter-branch and reset to exclude the other files, so they can be pruned:

  $ git filter-branch --subdirectory-filter ABC HEAD
   $ git reset --hard
    $ git gc --aggressive
     $ git prune

     and now you have a local git repository of the ABC sub-directory with all its history preserved.

     EDIT -- For most uses, git filter-branch should have the added parameter -- --all. (Yes that's really dash dash space dash dash all. This needs to be the last parameters for the command.) As Matli discovered, this keeps the project branches and tags included in the the new repo.

Q. How do I find the commit that deleted a known file
A. git rev-list -n 1 HEAD -- <file path>

Q. How do I restore that deleted file now
A. git checkout <deleting_commit>^ -- <file path>

Q. How do I browse files that were deleted at some point in time (not knowing file name)
A. git log --diff-filter=D --summary

Q. How do I show file renames with full history
A. git log --follow <filename>

Q. How do I delete a remote branch
A. git push origin :<branch name>
NB Dont forget to delete local
git branch -d <branch name>

Q. How do I delete a remote tag
A. git push origin :<tag name>

Q. Is that branch included in my branch
A. git log <my branch>..<branch to test>
ie. git log master..fix_101_br

Q. I checkout out a tag and am in a headless state - how do I find out which tag it was
A. git describe --tags
